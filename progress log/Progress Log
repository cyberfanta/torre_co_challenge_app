Progress Log

Fecha: 26-03-2021
Hora de inicio: 8:00pm

8:00pm	Iniciamos creando la cuenta de payoneer.
8:40pm	Se inicia el análisis de los endpoints.
9:00pm	Evaluación con postman.
9:05pm	--Decisión: Producir una app Android para el ejercicio incluyendo flutter como frontend framework.
9:10pm	Repaso de cursos de flutter.
11:30pm	Validar autocreación de clases de Java para los endpoints con Json.
12:10am Finalizo el día.

Pendiente:
- Diagramación de Clases para validar los posibles datos a mostrar en la UI
- Creación de Paleta de Colores en función de los colores de torre.co
- Diagramación de la interfaz usando Figma
- Creación del proyecto Flutter con Android Studio



Fecha: 27-03-2021
Hora de inicio: 12:00pm

12:00pm Continuo el análisis de los Endpoints, conseguí un auto generador de clases de java a partir de un json.
3:30pm	Inicio adecuaciones del proyecto, para validar las clases autogeneradas.
5:00pm	Por alguna razón los portales web de autogenerado de clases dejaron de funcionar, así que empecé con la busqueda desde otro enfoque.
7:00pm	Encontré un plugin de Android Studio que puede simplificar el desarrollo.
7:40pm	Por lo que veo el plugin funciona mucho mejor que las webs. Mi duda es con los endpoint get, los cuales tienen variaciones en el tamaño de la respuesta, no envian el json entero vacio, sino solo lo que necesito ver, por lo tanto las clases generadas no tienen toda la información. Para resolver esto tomaré una muestra de 5 usuarios y 5 trabajos, y comparar sus diferencias, el resultado debe ser una clase que incorpore los elementos descubiertos con una baja probabilidad de que falle por la estructura.
9:20pm	Después de probar varias opciones con el generador de clases, completo la creación de la estructura dentro del paquete com.cyberfanta.torre_co_challenge.models, estas estructuras las voy a mantener en código de java, y a continuación incluiré código kotlin en algunas funciones del proyecto.
9:25pm	Inicio el diseño conceptual de mi app. Identifico que a partir del endpoint POST People y del POST Opportunities, puedo generar una app para mostrar a los usuarios y a los trabajos que están disponibles dentro de torre.co y con los GET Bio y GET Job puedo mostrar el detalle. Así que mi diseño va a desplegar la lista de usuarios y trabajos para que quien use la app pueda ver quienes somos y que ofrecemos, luego si quiere ver detalle pueda seleccionar algún item y verlo.
11:25pm	Finalizo el diseño conceptual de mi interfaz. Inicio la paleta de colores en Figma por la hora.
12:20am	Finalizo el día.

Logros:
- Diagramación de Clases para validar los posibles datos a mostrar en la UI (Hecho)
- Creación de Paleta de Colores en función de los colores de torre.co (Hecho)

Pendiente:
- Escanear o fotografiar mi diseño conceptual.
- Diagramación de la interfaz usando Figma
- Creación del proyecto Flutter con Android Studio



Fecha: 28-03-2021
Hora de inicio: 10:00am

10:00am	Inicio las actividades con una idea para estructurar la lectura de la api y la contrucción del código de manera que pueda ser más lejible. Sin embargo tengo problemas para cargar las dependencias de java en la estructura del cógido. Las estoy colocando donde siempre pero ahora como estoy en un proyecto flutter, el código del yaml trabaja de otra manera, estoy investigando como solucionar.
1:26pm	Implementando el código, puedo ver que el proyecto Flutter, me está generando demasiados contratiempos. La gota que derramó el vaso fue que me diera excepciones a la hora de generar mis pruebas unitarias, y en la mañana me dio problemas al incorporar librerias. Y en vista del tiempo restante. ---Decido:-- Presindir del proyecto en Flutter y continuar con un proyecto Kotlin. Mi interes de hacerlo con Flutter era el ahorrar tiempo en el desarrollo de la interfaz, pero a estas alturas me está generando contratiempos. Si bien el riesgo de utilizar una tecnología que estoy recientemente conociendo, era algo que queria que evaluara la persona que me supervise, pienso que no me falta mucho para terminar de incorporarla, pero en este momento que estoy bajo la presión del tiempo, no debería ser momento para aprender sino para agilizar. Ya que después de levantar lo planificado, también tengo que agregar mi parte innovadora.
1:40pm	Comenzando un nuevo proyecto Kotlin.
2:40pm	Haciendo las pruebas unitarias, descubro que habia trabajado siempre con Api requests del tipo get, ahora me toca aprender a usar las del tipo post.
4:20pm	Encuentro que en la estructura del json get bio, hay una estructura extraña, en opportunities, el campo data a veces es un booleano y a veces es una lista. Esto requiere que agregue una lógica para que la data se cargue de manera correcta en la estrutura de datos.
4:40pm	La lista de opportunities es en efecto un elemento extraño en la estructura de este json, así que declaré data como un objecto de tipo object y eliminé el get y set para hacer que las pruebas unitarias pudieran pasar. Se me ocurre hacer una validación del objeto obtenido, y si es del tipo boolean almacenarlo en un boolean y si es del tipo lista de datos, en ese tipo de lista, pero eso lo dejo para después.
4:50pm	Continuando con las pruebas, me di cuenta que en el endpoint job pasa algo similar, voy a validar a que altura sucede
5:20pm	Me di cuenta que no era un error con el endpoint, sino que me habia equivocado haciendo las pruebas, ahora que lo he correjido, tengo un error con el tipo de dato al leer el weight de la persona, se utiliza un tipo de dato int cuando en realidad es un float.
5:30pm	Para mi sorpresa, los demás endpoint pasaron las pruebas. Así que me backend está listo para responder a solicitudes a la API de torre. --Decision: Voy ahora a la diagramación de mi diseño conceptual al Figma, para validar que mi interfaz está ok como la había conceptualizado.
7:45pm	Realizando el diseño me doy cuenta de algo que el usuario puede querer, y es buscar propuestas de trabajo específicas para el, por medio de una lupa. Pero el endpoint opportunities, con el valor aggregate cuando uno le coloca una palabra clave, este no funciona como me imaginaba, incluso el json te devuelve una etiqueta llamada aggregators, tampoco funciona como lo esperaba, así que por ahora lo voy a agregar a la interfáz y lo activaré al final.
8:00pm	Me doy cuenta diagramando la interfaz en Figma que optar por un despliegue de 3 tarjetas en horizontal por lo que dé en la vertical, las tarjetas van a quedar muy pequeñas, así que lo cambié por un diseño de 2 por lo que de a la vertical.
9:40pm	Veo por primera vez el prototipo en Figma de mi interfáz.
10:00pm	Evaluando las iteraciones con el prototipo, me doy cuenta que necesito un boton para regresar cuando entras al detalle del trabajo. --Decision: En vista del tiempo, voy a reutilizar este diseño para cuando toque desplegar a los usuarios. De esa manera ya puedo volver a trabajar con el Android Studio.
10:20pm	Se ocorrieron otros cambios al prototipo para darle más consistencia al diseño visual. Ahora si al Android Studio.
2:20am	Finalizo el día. La implementación de mi CardView está completa.

Logros:
- Diagramación de Clases para validar los posibles datos a mostrar en la UI (Hecho)
- Creación de Paleta de Colores en función de los colores de torre.co (Hecho)
- Escanear o fotografiar mi diseño conceptual (Hecho)
- Diagramación de la interfaz usando Figma (Hecho)

Pendiente:
- Implementación del proyecto con Android Studio (En progreso)
- Entrega del proyecto, subir y preparar los entregables



Fecha: 29-03-2021
Hora de inicio: 12:20pm

12:20pm	Inicio las actividades, después de atender los asuntos de mi actual trabajo.
1:00pm	Comienzo la implementación de un recyclerView para mostrar las tarjetas de los usuarios.
6:30pm	Entro en la recta final, empiezo a descartar funcionalidades con la idea de entregar el proyecto en la fecha acordada
7:30pm	Conversé con Valeria por que necesito un poco más de tiempo para terminar, innesperadamente la aplicación dejó de funcionar, el problema empezó por mi premura en terminar y dejé de hacer commits en el github, en consecuencia regresar implicaba perder muchas horas de desarrollo.
8:30pm	Comí y me bañé, ya estoy listo para una nueva sesión de programación.
7:00am	Me lancé una amanecida para completar el proyecto, sin embargo aun quedan detalles. Espero sea suficiente para demostrar conocimiento. Muy agradecido de antemano por su evaluación  y por la oportunidad de participar.




Fuera del periodo de entrega designado por torre.


Fecha: 31-03-2021
Hora de inicio: 2:00pm

2:00pm	Después de recuperarme del trasnocho y atender los asuntos de mi oficina, he decido continuar con el proyecto, quedan pendientes los siguientes items:
-Activar las vistas a detalle de cada tarjeta. Endpoints Job y Bio.
-Activar la carga de las imágenes de las tarjetas.
-Arreglar un problema estético con los botones "Bios" y "Jobs", que no permanecen completamente abajo de la vista.
-Agregar un thread de carga de los Bios para evitar que el usuario tenga un delay cuando presione el boton "Bios".
-Agregar una separación en las tarjetas para evitar el amontonamiento y mejorar la estética.
-Activar la lupa, para hacer que despliegue las tarjetas con un filtro de búsqueda.

8:00pm	Me doy cuenta de varios problemas menores y decido atenderlos con la idea de mejorar la eficiencia de la app.

Logros:
- Diagramación de Clases para validar los posibles datos a mostrar en la UI (Hecho)
- Creación de Paleta de Colores en función de los colores de torre.co (Hecho)
- Escanear o fotografiar mi diseño conceptual (Hecho)
- Diagramación de la interfaz usando Figma (Hecho)
- Entrega del proyecto, subir y preparar los entregables (Hecho)

Pendiente:
- Implementación del proyecto con Android Studio (En progreso)
- Activar las vistas a detalle de cada tarjeta. Endpoints Job y Bio.
- Activar la carga de las imágenes de las tarjetas.
- Arreglar un problema estético con los botones "Bios" y "Jobs", que no permanecen completamente abajo de la vista.
- Agregar un thread de carga de los Bios para evitar que el usuario tenga un delay cuando presione el boton "Bios".
- Agregar una separación en las tarjetas para evitar el amontonamiento y mejorar la estética.
- Activar la lupa, para hacer que despliegue las tarjetas con un filtro de búsqueda.



Fecha: 31-03-2021
Hora de inicio: 2:00pm

11:00am	Inicio el día con la idea de terminar de cambiar las estructuras de datos de ArrayList por HashMaps, la idea es asociar el id de los elementos a los objectos descargados.
5:00pm	Luego de crear el proyecto con iterators, la app ha dejado de funcionar, me doy cuenta que debo implementar Test a mi clase gestora de conexiones.
8:00pm	La app vuelve a funcionar, me di cuenta que tengo un problema con la forma como uso los iterators.
8:20pm	Veo que el problema se da cuando inserto nuevos elementos en los HashMaps, el set definido en los iterator cambia y el iterator no funciona como yo espero, así que decido primero cambiar de HashMaps a LinkedHashMaps para garantizar el orden. Segundo cambiarle el tipo a los iterators a simples enteros.
9:30pm	Ya las nuevas estructuras están funcionando perfectamente. Ahora vamos con los nuevos cambios.